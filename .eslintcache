[{"/home/thando/Projects/React/school-front-end/src/index.js":"1","/home/thando/Projects/React/school-front-end/src/reportWebVitals.js":"2","/home/thando/Projects/React/school-front-end/src/components/NavigationBar.js":"3","/home/thando/Projects/React/school-front-end/src/store.js":"4","/home/thando/Projects/React/school-front-end/src/reducers/index.js":"5","/home/thando/Projects/React/school-front-end/src/actions/gradeActions.js":"6","/home/thando/Projects/React/school-front-end/src/reducers/gradeReducer.js":"7","/home/thando/Projects/React/school-front-end/src/containers/App.js":"8","/home/thando/Projects/React/school-front-end/src/components/Home.js":"9","/home/thando/Projects/React/school-front-end/src/reducers/learnerReducer.js":"10","/home/thando/Projects/React/school-front-end/src/actions/learnerActions.js":"11","/home/thando/Projects/React/school-front-end/src/reducers/subjectReducer.js":"12","/home/thando/Projects/React/school-front-end/src/actions/subjectActions.js":"13","/home/thando/Projects/React/school-front-end/src/actions/TestData.js":"14","/home/thando/Projects/React/school-front-end/src/actions/types.js":"15","/home/thando/Projects/React/school-front-end/src/components/Navigation.js":"16","/home/thando/Projects/React/school-front-end/src/components/AddNewLesson.js":"17","/home/thando/Projects/React/school-front-end/src/components/AddNewLearner.js":"18","/home/thando/Projects/React/school-front-end/src/components/LearnersList.js":"19","/home/thando/Projects/React/school-front-end/src/components/SubjectList.js":"20","/home/thando/Projects/React/school-front-end/src/components/LessonList.js":"21","/home/thando/Projects/React/school-front-end/src/actions/lessonActions.js":"22","/home/thando/Projects/React/school-front-end/src/reducers/lessonReducer.js":"23","/home/thando/Projects/React/school-front-end/src/reducers/teacherReducer.js":"24","/home/thando/Projects/React/school-front-end/src/components/TeacherList.js":"25","/home/thando/Projects/React/school-front-end/src/actions/teacherActions.js":"26","/home/thando/Projects/React/school-front-end/src/components/AddNewSubject.js":"27","/home/thando/Projects/React/school-front-end/src/components/AddNewTeacher.js":"28","/home/thando/Projects/React/school-front-end/src/reducers/dayReducer.js":"29","/home/thando/Projects/React/school-front-end/src/actions/dayActions.js":"30","/home/thando/Projects/React/school-front-end/src/summary report/App.js":"31","/home/thando/Projects/React/school-front-end/src/summary report/components/Subtotal/Subtotal.js":"32","/home/thando/Projects/React/school-front-end/src/summary report/components/PickupSavings/PickupSavings.js":"33","/home/thando/Projects/React/school-front-end/src/summary report/components/TaxesFees/TaxesFees.js":"34","/home/thando/Projects/React/school-front-end/src/summary report/components/EstimatedTotal/EstimatedTotal.js":"35","/home/thando/Projects/React/school-front-end/src/reducers/navigationReducer.js":"36","/home/thando/Projects/React/school-front-end/src/actions/navigationActions.js":"37","/home/thando/Projects/React/school-front-end/src/components/UpdateSubject.js":"38","/home/thando/Projects/React/school-front-end/src/components/UpdateSubjectComponent.js":"39","/home/thando/Projects/React/school-front-end/src/components/LearnerLessons.js":"40","/home/thando/Projects/React/school-front-end/src/components/LearnerNavigation.js":"41","/home/thando/Projects/React/school-front-end/src/components/SelectSubject.js":"42","/home/thando/Projects/React/school-front-end/src/components/ChooseSubjectModal.js":"43","/home/thando/Projects/React/school-front-end/src/components/LearnerSubjectsModal.js":"44","/home/thando/Projects/React/school-front-end/src/components/LearnerClassmates.js":"45","/home/thando/Projects/React/school-front-end/src/components/TeacherLessons.js":"46"},{"size":691,"mtime":1616951443928,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1610377893070,"results":"49","hashOfConfig":"48"},{"size":1038,"mtime":1612188864796,"results":"50","hashOfConfig":"48"},{"size":419,"mtime":1616689937408,"results":"51","hashOfConfig":"48"},{"size":474,"mtime":1616788315098,"results":"52","hashOfConfig":"48"},{"size":631,"mtime":1616784811481,"results":"53","hashOfConfig":"48"},{"size":355,"mtime":1616784979790,"results":"54","hashOfConfig":"48"},{"size":1549,"mtime":1617619503616,"results":"55","hashOfConfig":"48"},{"size":1556,"mtime":1617022165052,"results":"56","hashOfConfig":"48"},{"size":1470,"mtime":1617617455928,"results":"57","hashOfConfig":"48"},{"size":3104,"mtime":1617612424464,"results":"58","hashOfConfig":"48"},{"size":1473,"mtime":1617020765068,"results":"59","hashOfConfig":"48"},{"size":2772,"mtime":1617275517516,"results":"60","hashOfConfig":"48"},{"size":2228,"mtime":1615644328148,"results":"61","hashOfConfig":"48"},{"size":3301,"mtime":1617612398544,"results":"62","hashOfConfig":"48"},{"size":5241,"mtime":1617127017204,"results":"63","hashOfConfig":"48"},{"size":7294,"mtime":1616879270260,"results":"64","hashOfConfig":"48"},{"size":5980,"mtime":1616876802576,"results":"65","hashOfConfig":"48"},{"size":3101,"mtime":1617021771156,"results":"66","hashOfConfig":"48"},{"size":3826,"mtime":1617433772724,"results":"67","hashOfConfig":"48"},{"size":3307,"mtime":1616882676116,"results":"68","hashOfConfig":"48"},{"size":1646,"mtime":1616758557596,"results":"69","hashOfConfig":"48"},{"size":671,"mtime":1616758614006,"results":"70","hashOfConfig":"48"},{"size":742,"mtime":1616761565651,"results":"71","hashOfConfig":"48"},{"size":2915,"mtime":1617022128480,"results":"72","hashOfConfig":"48"},{"size":1110,"mtime":1616779561561,"results":"73","hashOfConfig":"48"},{"size":2696,"mtime":1616875586248,"results":"74","hashOfConfig":"48"},{"size":3911,"mtime":1616878185420,"results":"75","hashOfConfig":"48"},{"size":304,"mtime":1615647397032,"results":"76","hashOfConfig":"48"},{"size":400,"mtime":1615713515072,"results":"77","hashOfConfig":"48"},{"size":1289,"mtime":1615836951893,"results":"78","hashOfConfig":"48"},{"size":341,"mtime":1615828132948,"results":"79","hashOfConfig":"48"},{"size":945,"mtime":1615836600829,"results":"80","hashOfConfig":"48"},{"size":551,"mtime":1615835389829,"results":"81","hashOfConfig":"48"},{"size":676,"mtime":1615835523689,"results":"82","hashOfConfig":"48"},{"size":3990,"mtime":1617612903192,"results":"83","hashOfConfig":"48"},{"size":3778,"mtime":1617612717340,"results":"84","hashOfConfig":"48"},{"size":3079,"mtime":1617019881496,"results":"85","hashOfConfig":"48"},{"size":3470,"mtime":1617020671764,"results":"86","hashOfConfig":"48"},{"size":5813,"mtime":1617634804665,"results":"87","hashOfConfig":"48"},{"size":5701,"mtime":1617635361809,"results":"88","hashOfConfig":"48"},{"size":3600,"mtime":1617128130356,"results":"89","hashOfConfig":"48"},{"size":4443,"mtime":1617545725521,"results":"90","hashOfConfig":"48"},{"size":3435,"mtime":1617441954157,"results":"91","hashOfConfig":"48"},{"size":3461,"mtime":1617627383497,"results":"92","hashOfConfig":"48"},{"size":6722,"mtime":1617619942100,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"pa7hqb",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"97"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"97"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"97"},"/home/thando/Projects/React/school-front-end/src/index.js",["205"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\n// import App from './summary report/App';\nimport store from './store';\n\nimport Home from './components/Home'\n\nimport App from './containers/App';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root')\n\n   // <App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["206","207"],"/home/thando/Projects/React/school-front-end/src/reportWebVitals.js",[],["208","209"],"/home/thando/Projects/React/school-front-end/src/components/NavigationBar.js",[],"/home/thando/Projects/React/school-front-end/src/store.js",[],"/home/thando/Projects/React/school-front-end/src/reducers/index.js",[],"/home/thando/Projects/React/school-front-end/src/actions/gradeActions.js",[],"/home/thando/Projects/React/school-front-end/src/reducers/gradeReducer.js",[],"/home/thando/Projects/React/school-front-end/src/containers/App.js",["210"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport NavigationBar from '../components/NavigationBar';\nimport Home from '../components/Home';\n\nimport Navigation from '../components/Navigation';\nimport LearnersList from '../components/LearnersList';\nimport UpdateSubject from '../components/UpdateSubject';\nimport UpdateSubjectComponent from '../components/UpdateSubjectComponent';\nimport LearnerLessons from '../components/LearnerLessons';\nimport SelectSubject from '../components/SelectSubject';\n\nimport TeacherLessons from '../components/TeacherLessons'\n\nclass App extends Component {\n   render() {\n      return (\n         <div className=\"App\">\n            <NavigationBar />\n            <Router>\n     \n               <Switch>\n                  <Route path=\"/\" exact component={ Home }></Route> \n                  <Route path=\"/update-subject/:id\" component={ UpdateSubjectComponent }></Route>\n                  <Route path=\"/learner/:id/lessons\" component={ LearnerLessons }></Route>\n                  <Route path=\"/select-subject\" component={ SelectSubject }></Route>\n\n                  <Route path=\"/teacher/:id/lessons\" component={ TeacherLessons }></Route>\n                  \n\n                 \n                  <Home /> \n                  <UpdateSubject />\n                  <LearnersList />\n                  <LearnerLessons />\n                  <TeacherLessons />\n               </Switch>\n            </Router> \n\n         </div>\n      );\n   }\n}\n\n\nexport default App;\n","/home/thando/Projects/React/school-front-end/src/components/Home.js",["211","212","213","214"],"\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getAllGrades } from '../actions/gradeActions';\nimport { getAllTeachers } from '../actions/teacherActions'\nimport { getAllDays } from '../actions/dayActions';\n\nimport { Container, Jumbotron } from 'react-bootstrap';\n\nimport NavigationBar from './NavigationBar';\nimport Navigation from './Navigation';\nimport LearnersList from './LearnersList'\n\n\nclass Home extends Component {\n\n   componentDidMount() {\n      this.props.getAllGrades();\n      this.props.getAllTeachers();\n      this.props.getAllDays();\n   }\n\n   render() {\n      console.log(this.props);\n      return (\n         <>\n            <Jumbotron>\n               <Container>\n                     <Navigation />\n                     <LearnersList />\n               </Container>\n            </Jumbotron>\n\n\n\n         </>\n      );\n   }\n\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      grades: state.grades,\n      teachers: state.teachers,\n      days: state.days\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllGrades: bindActionCreators(getAllGrades, dispatch),\n      getAllTeachers: bindActionCreators(getAllTeachers, dispatch),\n      getAllDays: bindActionCreators(getAllDays, dispatch),\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/home/thando/Projects/React/school-front-end/src/reducers/learnerReducer.js",[],"/home/thando/Projects/React/school-front-end/src/actions/learnerActions.js",["215"],"import axios from 'axios';\nimport { \n   FETCH_LEARNERS, \n   ADD_LEARNER, \n   DELETE_LEARNER, \n   SELECT_SUBJECT, \n   FETCH_LEARNER_BY_ID, \n   DELETE_LEARNER_SUBJECT,\n   FETCH_LEARNER_CLASSMATES \n\n} from './types'\n\n\nexport const getAllLearners = () => (dispatch) => {\n   axios.get(`http://localhost:8080/learners`)\n      .then(response => response.data)\n      .then(learners => {\n         dispatch({\n            type: FETCH_LEARNERS,\n            payload: learners\n         });\n      });\n}\n\n// export const addLearner = (gradeId, newLearner) => (dispatch) => {\n//    console.log(\"FROM ADD NEW LEARNER ACTION\");\n//    axios.post(`http://localhost:8080/learners/grade/${gradeId}/add`, newLearner)\n//     .then((response) => {\n//         console.log(\"RESPONSE:\", response);\n//         dispatch({\n//             type: ADD_LEARNER,\n//             payload: newLearner\n//         });\n//     });\n\n// dispatch({\n//     type: ADD_LEARNER,\n//     payload: newLearner\n// });\n\n//    console.log(\"NEW LEARNER: \", newLearner);\n// }\n\nexport const addLearner = (learnersList, gradeId, newLearner) => async (dispatch) => {\n   try {\n      let response = await axios.post(`http://localhost:8080/learners/grade/${gradeId}/add`, newLearner)\n\n      dispatch({\n         type: ADD_LEARNER,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const removeLearner = (learnersList, learnerId) => async (dispatch) => {\n   try {\n      const newLearnersList = learnersList.slice().filter( learner => learner.id !== learnerId);\n      let response = await axios.delete(`http://localhost:8080/learners/${learnerId}`)\n\n      dispatch({\n         type: DELETE_LEARNER,\n         payload: newLearnersList\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\n\nexport const selectSubject = (subjectId, learnerObj) => async(dispatch) => {\n   try {\n      const response = await axios.put(`http://localhost:8080/learners/subject/${subjectId}/add`, learnerObj);\n\n      dispatch({\n         type: SELECT_SUBJECT,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const removeLearnerSubject = (subjectId, learnerObj) => async(dispatch) => {\n   try {\n      const response = await axios.put(`http://localhost:8080/learners/subject/${subjectId}/remove`, learnerObj);\n\n      dispatch({\n         type: DELETE_LEARNER_SUBJECT,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const getLearnerById = (id) => async(dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/learners/${id}`);\n\n      dispatch({\n         type: FETCH_LEARNER_BY_ID,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\n\nexport const getClassmates = (id) => async(dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/learners/${id}/classmates`);\n\n      dispatch({\n         type: FETCH_LEARNER_CLASSMATES,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}","/home/thando/Projects/React/school-front-end/src/reducers/subjectReducer.js",[],"/home/thando/Projects/React/school-front-end/src/actions/subjectActions.js",["216","217","218"],"import axios from 'axios';\nimport { \n   FETCH_SUBJECTS, \n   ADD_SUBJECT, \n   DELETE_SUBJECT, \n   ADD_SUBJECT_STARTED, \n   ADD_SUBJECT_SUCCESS, \n   ADD_SUBJECT_FAILURE,\n\n   FETCH_SUBJECT_BY_ID,\n   UPDATE_SUBJECT,\n\n} from './types';\nimport { subjects } from './TestData';\n\nexport const getAllSubjects = () => async (dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/subjects`);\n      dispatch({\n         type: FETCH_SUBJECTS,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\n// export const addSubject = (subjectsList, newSubject) => async(dispatch, getState) => {\n//     try {\n//         const list = getState().subject.items;\n//         list.push({...newSubject});\n//         console.log(\"SHOWING LIST: \", list);\n//         // const response = await axios.post(`http://localhost:8080/subjects`, newSubject);\n\n//         // subjectsList.push({...response.data})\n\n//         // dispatch({\n//         //     type: ADD_SUBJECT,\n//         //     payload: subjectsList\n//         // });\n\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\n\n\n\nexport const removeSubject = (items, id) => async (dispatch) => {\n   try {\n      const newSubjects = items.slice().filter(item => item.id !== id);\n      const response = await axios.delete(`http://localhost:8080/subjects/${id}`);\n\n      dispatch({\n         type: DELETE_SUBJECT,\n         payload: newSubjects\n      });\n   }\n   catch (error) {\n      console.log(error);\n   }\n}\n\nexport const addSubject = (newSubject) => async (dispatch, getState) => {\n   try {\n      dispatch( addSubjectStarted() );\n      const response = await axios.post(`http://localhost:8080/subjects`, newSubject);\n      dispatch( addSubjectSuccess(response.data) );\n\n   } catch (error) {\n      dispatch( addSubjectFailure() );\n      console.log(error);\n   }\n}\n\nconst addSubjectSuccess = subject => ({\n   type: ADD_SUBJECT_SUCCESS,\n   payload: {\n      ...subject\n   }\n});\n\nconst addSubjectStarted = () => ({\n   type: ADD_SUBJECT_STARTED\n});\n\nconst addSubjectFailure = error => ({\n   type: ADD_SUBJECT_FAILURE,\n   payload: {\n      error\n   }\n})\n\n\nexport const getSubjectById = (id) => async(dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/subjects/${id}`);\n\n      dispatch({\n         type: FETCH_SUBJECT_BY_ID,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const updateSubject = (subject, id) => async(dispatch) => {\n   try {\n      const response = await axios.put(`http://localhost:8080/subjects/${id}`, subject);\n\n      dispatch({\n         type: UPDATE_SUBJECT,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\n\n\n","/home/thando/Projects/React/school-front-end/src/actions/TestData.js",[],"/home/thando/Projects/React/school-front-end/src/actions/types.js",[],"/home/thando/Projects/React/school-front-end/src/components/Navigation.js",[],"/home/thando/Projects/React/school-front-end/src/components/AddNewLesson.js",["219","220"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getAllGrades } from '../actions/gradeActions';\nimport { getAllSubjects } from '../actions/subjectActions';\nimport { getAllLessons, addLesson } from '../actions/lessonActions'\nimport { getAllDays } from '../actions/dayActions';\nimport { closeAddLessonModal } from '../actions/navigationActions';\n\nimport { Button, Modal, Col } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\n\nclass AddNewLesson extends Component {\n   state = {\n      show: false,\n      newLessonData: {\n         lessonName: '',\n         time: '',\n         subject: {\n            id: 0,\n            subjectName: ''\n         },\n         grade: {\n            id: 0,\n            gradeName: ''\n         },\n         day: {\n            id: 0,\n            dayName: ''\n         }\n      },\n\n    }\n\n   onChangeLessonName = (evt) => {\n      const { newLessonData } = this.state;\n      newLessonData.lessonName = evt.target.value;\n      this.setState({ newLessonData });\n   }\n\n   onChangeTime = (evt) => {\n      const { newLessonData } = this.state;\n      newLessonData.time = evt.target.value;\n      this.setState({ newLessonData });\n   }\n\n   onChangeSubject = (evt) => {\n      const { newLessonData } = this.state;\n      let index = evt.target.selectedIndex;\n      let dataset = evt.target.options[index].dataset;\n      newLessonData.subject.id = dataset.idx;\n      this.setState({ newLessonData });\n   }\n\n   onChangeGrade = (evt) => {\n      const { newLessonData } = this.state;\n      let index = evt.target.selectedIndex;\n      let dataset = evt.target.options[index].dataset;\n      newLessonData.grade.id = dataset.idx;\n      this.setState({ newLessonData });\n   }\n\n   onChangeDay = (evt) => {\n      const { newLessonData } = this.state;\n      let index = evt.target.selectedIndex;\n      let dataset = evt.target.options[index].dataset;\n      newLessonData.day.id = dataset.idx;\n      this.setState({ newLessonData });\n   }\n\n   handleAddLesson = (evt) => {\n      evt.preventDefault();\n      const subjectId = this.state.newLessonData.subject.id;\n      const gradeId = this.state.newLessonData.grade.id;\n      const dayId = this.state.newLessonData.day.id;\n\n      this.props.addLesson(subjectId, gradeId, dayId, this.state.newLessonData);\n   }\n   \n\n   render() {\n      const { closeAddLessonModal, showAddLessonModal} = this.props;\n\n      const subjectList = this.props.subjects.map( subject => \n         <option key={subject.id} data-idx={subject.id}>{subject.subjectName}</option> );\n\n      const gradeList = this.props.grades.map( grade => \n         <option key={grade.id} data-idx={grade.id}>{grade.gradeName}</option> )\n\n      const dayList = this.props.days.map( day => \n         <option key={day.id} data-idx={day.id}>{day.dayName}</option> );\n\n      return (\n\n         <>\n            <Modal\n               show={ this.props.navigation.isAddLessonModalOpen }\n               onHide={ () => this.props.closeAddLessonModal() }\n               backdrop=\"static\"\n               keyboard={false}\n            >\n               <Modal.Header closeButton>\n                  <Modal.Title>Add Lessons</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Form>\n                     <Col xs={8} className=\"mt-4\">\n                        <Form.Group controlId=\"subjectSelect\">\n                           <Form.Label>Subject</Form.Label>\n                           <Form.Control\n                              as=\"select\"\n                              custom\n                              // value={this.state.newLessonData.subject.id}\n                              onChange={this.onChangeSubject}\n                           >\n                              <option>select subject</option>\n                              { subjectList }\n                           </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"gradeSelect\">\n                           <Form.Label>Grade</Form.Label>\n                           <Form.Control\n                              as=\"select\"\n                              custom\n                              // value={this.state.newLessonData.grade.id}\n                              onChange={this.onChangeGrade}\n                           >\n                              <option>select grade</option>\n\n                              {gradeList}\n                           </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"daySelect\">\n                           <Form.Label>Day</Form.Label>\n                           <Form.Control\n                              as=\"select\"\n                              custom\n                              // value={this.state.newLessonData.day.id}\n                              onChange={this.onChangeDay}\n                           >\n                              <option>select day</option>\n\n                              {dayList}\n                           </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"firstName\">\n                           <Form.Label>Lesson</Form.Label>\n                           <Form.Control\n                              type=\"text\"\n                              value={this.state.newLessonData.lessonName}\n                              onChange={this.onChangeLessonName}\n                           />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"lastName\">\n                           <Form.Label>Time</Form.Label>\n                           <Form.Control\n                              type=\"text\"\n                              value={this.state.newLessonData.time}\n                              onChange={this.onChangeTime}\n                           />\n                        </Form.Group>\n\n                     </Col>\n                  </Form>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={ () => this.props.closeAddLessonModal() }>\n                     Close\n                  </Button>\n                  <Button\n                     variant=\"primary\"\n                     onClick={this.handleAddLesson}\n                  > Save Lesson\n                   </Button>\n               </Modal.Footer>\n            </Modal>\n         </>\n      );\n   }\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      grades: state.grade.items,\n      subjects: state.subject.items,\n      lessons: state.lesson.items,\n      days: state.days,\n      navigation: state.navigation\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllGrades: bindActionCreators(getAllGrades, dispatch),\n      getAllSubjects: bindActionCreators(getAllSubjects, dispatch),\n      getAllLessons: bindActionCreators(getAllLessons,dispatch),\n      getAllDays: bindActionCreators(getAllDays, dispatch),\n\n      addLesson: bindActionCreators(addLesson, dispatch),\n      closeAddLessonModal: bindActionCreators(closeAddLessonModal, dispatch),\n \n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewLesson);\n","/home/thando/Projects/React/school-front-end/src/components/AddNewLearner.js",[],"/home/thando/Projects/React/school-front-end/src/components/LearnersList.js",[],"/home/thando/Projects/React/school-front-end/src/components/SubjectList.js",["221","222"],"import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Table } from 'react-bootstrap';\n\nimport { getAllSubjects, removeSubject } from '../actions/subjectActions';\nimport { openUpdateSubjectModal, closeShowSubjectsModal } from '../actions/navigationActions';\n\nimport UpdateSubject from './UpdateSubject';\n\nclass SubjectList extends Component {\n   // constructor(props) {\n   //    super(props);\n\n   //    this.editSubject = this.editSubject.bind(this)\n   // }\n\n   componentDidMount() {\n      this.props.getAllSubjects();\n   }\n\n   deleteSubject = (id) => {\n      this.props.removeSubject(this.props.subjects, id);\n   }  \n\n   editSubject = (id) => {\n      console.log(\"STILL NEED TO PUSH(REDIRECTS) TO UPDATE SUBJECT COMPONENT\");\n      // this.props.history.push(`/update-subject/${id}`); \n   }\n\n\n   handleOpenModal = () => this.props.openUpdateSubjectModal();\n\n   closeShowSubjectsModal = () => this.props.closeShowSubjectsModal();\n\n   render() {\n      const { showSubjectsModal, closeShowSubjectsModal } = this.props;\n    \n      const subjects = this.props.subjects.map( subject => {\n         return (\n            <tr key={subject.id}>\n               <td>{subject.subjectName}</td>\n               <td>\n                  <Button \n                     variant=\"primary\" \n                     onClick={ this.editSubject(subject.id) }\n                     className=\"mr-2\" >\n                        Edit\n                  </Button>\n                  <Button \n                     variant=\"danger\"\n                     onClick={() => this.deleteSubject(subject.id)}\n                     > Remove\n                  </Button>\n               </td>\n            </tr>\n         );\n      });\n\n      return (\n         <>\n\n            <UpdateSubject />\n\n            <Modal\n               show={this.props.navigation.isShowSubjectsModalOpen}\n               onHide={closeShowSubjectsModal}\n               // backdrop=\"static\"\n               keyboard={false}\n            >\n               <Modal.Header closeButton>\n                  <Modal.Title style={{background: \"yellow\"}}>List of subjects</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Table striped bordered hover>\n                        <thead>\n                           <tr>\n                              <th>Subject name</th>\n                              <th>Action</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {subjects}\n                        </tbody>\n                     </Table>\n                  </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={closeShowSubjectsModal}>\n                     Close modal\n                  </Button>\n                  \n               </Modal.Footer>\n            </Modal>\n         </>\n      )\n   }\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      subjects: state.subject.items,\n      navigation: state.navigation\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllSubjects: bindActionCreators(getAllSubjects, dispatch),\n      removeSubject: bindActionCreators(removeSubject, dispatch),\n      openUpdateSubjectModal: bindActionCreators(openUpdateSubjectModal, dispatch),\n      closeShowSubjectsModal: bindActionCreators(closeShowSubjectsModal, dispatch)\n   }\n}\n\n// const SubjectListWithRouter = withRouter(SubjectList);\n\n// export const SubjContainer =  connect(mapStateToProps, mapDispatchToProps)(withRouter(SubjectList));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubjectList);\n","/home/thando/Projects/React/school-front-end/src/components/LessonList.js",["223"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Modal, Button, Table } from 'react-bootstrap';\n\nimport { getAllLessons, removeLesson } from '../actions/lessonActions';\nimport { closeShowLessonsModal } from '../actions/navigationActions';\n\nlet styles = {\n   modalWidth: {\n      width: \"max-content\",\n      border: \"solid red 3px\"\n   }\n}\n\nclass LessonList extends Component {\n\n   componentDidMount() {\n      this.props.getAllLessons();\n   }\n\n   deleteLesson = (id) => {\n      this.props.removeLesson(this.props.lessons, id)\n   }\n\n   render() {\n\n      const lessons = this.props.lessons.map( lesson => {\n         return (\n            <tr key={lesson.id}>\n               <td>{lesson.lessonName}</td>\n               <td>{lesson.subject.subjectName}</td>\n               <td>{lesson.grade.gradeName}</td>\n               <td>{lesson.day.dayName}</td>\n               <td>{lesson.time}</td>\n               <td>\n                  <Button variant=\"primary\" className=\"mr-2\">Edit</Button>\n                  <Button \n                     variant=\"danger\"\n                     onClick={ () => this.deleteLesson(lesson.id) }\n                  >Remove\n                  </Button>\n               </td>\n            </tr>\n         );\n      });\n\n      return (\n         <>\n            <Modal\n               show={ this.props.navigation.isShowLessonsModalOpen }\n               onHide={ () => this.props.closeShowLessonsModal() }\n               // backdrop=\"static\"\n               keyboard={false}\n               className=\"Test\"\n               size=\"lg\"\n               // aria-labelledby=\"contained-modal-title-vcenter\"\n               //centered\n              \n            >\n               <Modal.Header closeButton>\n                  <Modal.Title>List of lessons</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n               <Table striped bordered hover>\n                     <thead>\n                        <tr>\n                           <th>Lesson</th>\n                           <th>Subject</th>\n                           <th>Grade</th>\n                           <th>Day</th>\n                           <th>Time</th>\n                           <th>Action</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {lessons}\n                     </tbody>\n                  </Table>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button variant=\"secondary\" onClick={ () => this.props.closeShowLessonsModal() }>\n                     Close Modal\n                  </Button>\n               </Modal.Footer>\n            </Modal>\n         </>\n      )\n   }\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      lessons: state.lesson.items,\n      navigation: state.navigation\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllLessons: bindActionCreators(getAllLessons, dispatch),\n      removeLesson: bindActionCreators(removeLesson, dispatch),\n      closeShowLessonsModal: bindActionCreators(closeShowLessonsModal, dispatch)\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonList);\n\n","/home/thando/Projects/React/school-front-end/src/actions/lessonActions.js",["224"],"import axios from 'axios';\nimport { FETCH_LESSONS, ADD_LESSON, DELETE_LESSON } from './types';\n\n// import { lessons } from './TestData';\n\nexport const getAllLessons = () => async (dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/lessons`);\n\n      dispatch({\n         type: FETCH_LESSONS,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n   // dispatch({\n   //    type: FETCH_LESSONS,\n   //    payload: lessons\n   // });\n}\n\nexport const addLesson = (subjectId, gradeId, dayId, newLesson) => async(dispatch) => {\n   try {\n      const ADD_LESSON_URL = `http://localhost:8080/lessons/subject/${subjectId}/grade/${gradeId}/day/${dayId}/add`;\n      const response = await axios.post(ADD_LESSON_URL, newLesson);\n     \n      dispatch({\n         type: ADD_LESSON,\n         payload: response.data\n      });\n      \n   } catch (error) {\n      console.log(error);\n   }\n}\n\n\nexport const removeLesson = (items, lessonId) => async(dispatch) => {\n   try {\n      const lessonsList = items.slice().filter(item => item.id !== lessonId);\n      const response = await axios.delete(`http://localhost:8080/lessons/${lessonId}`);\n\n      dispatch({\n         type: DELETE_LESSON,\n         payload: lessonsList\n      })\n      \n   } catch (error) {\n      console.log(error);\n   }\n\n}\n\n// @PostMapping(\"/lessons/subject/{subjectId}/grade/{gradeId}/day/{dayId}/add\")\n//    public Lesson addLesson(@PathVariable Long subjectId, @PathVariable Long gradeId, @PathVariable Long dayId, @RequestBody Lesson lesson) {\n//       return lessonService.addLesson(subjectId, gradeId, dayId, lesson);\n//    }\n","/home/thando/Projects/React/school-front-end/src/reducers/lessonReducer.js",[],"/home/thando/Projects/React/school-front-end/src/reducers/teacherReducer.js",[],"/home/thando/Projects/React/school-front-end/src/components/TeacherList.js",[],"/home/thando/Projects/React/school-front-end/src/actions/teacherActions.js",["225"],"import axios from 'axios';\nimport { FETCH_TEACHERS, ADD_TEACHER, DELETE_TEACHER } from './types';\n\nexport const getAllTeachers = () => async (dispatch) => {\n   try {\n      const response = await axios.get(`http://localhost:8080/teachers`);\n\n      dispatch({\n         type: FETCH_TEACHERS,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const addTeacher = (newTeacher) => async (dispatch) => {\n   try {\n      const response = await axios.post(`http://localhost:8080/teachers`, newTeacher)\n\n      dispatch({\n         type: ADD_TEACHER,\n         payload: response.data\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}\n\nexport const removeTeacher = (teachersList, teacherId) => async(dispatch) => {\n   try {\n      const newTeachersList = teachersList.slice().filter(teacher => teacher.id !== teacherId);\n      const response = await axios.delete(`http://localhost:8080/teachers/${teacherId}`)\n\n      dispatch({\n         type: DELETE_TEACHER,\n         payload: newTeachersList\n      });\n\n   } catch (error) {\n      console.log(error);\n   }\n}","/home/thando/Projects/React/school-front-end/src/components/AddNewSubject.js",[],"/home/thando/Projects/React/school-front-end/src/components/AddNewTeacher.js",[],"/home/thando/Projects/React/school-front-end/src/reducers/dayReducer.js",[],"/home/thando/Projects/React/school-front-end/src/actions/dayActions.js",[],"/home/thando/Projects/React/school-front-end/src/summary report/App.js",[],["226","227"],"/home/thando/Projects/React/school-front-end/src/summary report/components/Subtotal/Subtotal.js",[],"/home/thando/Projects/React/school-front-end/src/summary report/components/PickupSavings/PickupSavings.js",[],"/home/thando/Projects/React/school-front-end/src/summary report/components/TaxesFees/TaxesFees.js",[],"/home/thando/Projects/React/school-front-end/src/summary report/components/EstimatedTotal/EstimatedTotal.js",[],"/home/thando/Projects/React/school-front-end/src/reducers/navigationReducer.js",[],"/home/thando/Projects/React/school-front-end/src/actions/navigationActions.js",[],"/home/thando/Projects/React/school-front-end/src/components/UpdateSubject.js",["228"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addSubject, getAllSubjects } from '../actions/subjectActions';\nimport { closeUpdateSubjectModal, closeShowSubjectsModal } from '../actions/navigationActions';\n\n\nimport { Modal, Form, Col, Button } from 'react-bootstrap';\n\nclass AddNewSubject extends Component {\n   state = {\n      newSubjectData: {\n         //id: this.props.match.params.id,\n         subjectName: ''\n      }\n   }\n\n   onChangeSubjectName = (evt) => {\n      let { newSubjectData } = this.state;\n      newSubjectData.subjectName = evt.target.value;\n      this.setState({ newSubjectData })\n   }\n\n   handleUpdateSubject = (evt) => {\n      evt.preventDefault();\n      // this.props.addSubject(this.props.subjects, this.state.newSubjectData);\n      this.props.updateSubject(this.state.newSubjectData);\n   }\n\n   handleCloseModal = () => {\n      console.log(\"CLOSING UPDATE MODAL\");\n      // should update show state of updateModal\n      //this.props.closeAddSubjectModal();\n\n   }\n\n   render() {\n     \n      \n      return (\n         <>\n            <Modal\n               show={this.props.navigation.isUpdateSubjectModalOpen}\n               onHide={() => this.props.closeUpdateSubjectModal()}\n               backdrop=\"static\"\n               keyboard={false}\n            >\n               <Modal.Header closeButton>\n                  <Modal.Title>Update subject</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Form>\n                     <Col xs={8} className=\"mt-4\">\n                        <Form.Group controlId=\"tokens\">\n                           <Form.Label>Subject</Form.Label>\n                           <Form.Control\n                              type=\"text\"\n                              value={this.state.newSubjectData.subjectName}\n                              onChange={this.onChangeSubjectName}\n                           />\n                        </Form.Group>\n                     </Col>\n                    \n                  </Form>\n               </Modal.Body>\n               <Modal.Footer>\n                  <Button \n                     variant=\"secondary\" \n                     onClick={ () => this.props.closeUpdateSubjectModal() }>\n                     Close\n                  </Button>\n                  <Button\n                     variant=\"primary\"\n                     onClick={this.handleAddSubject}\n                  > Update\n                   </Button>\n               </Modal.Footer>\n            </Modal>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      subjects: state.subject.items,\n      navigation: state.navigation\n   }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllSubjects: bindActionCreators(getAllSubjects, dispatch),\n      addSubject: bindActionCreators(addSubject, dispatch),\n      closeUpdateSubjectModal: bindActionCreators(closeUpdateSubjectModal, dispatch)\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewSubject)","/home/thando/Projects/React/school-front-end/src/components/UpdateSubjectComponent.js",["229"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { addSubject, getAllSubjects, getSubjectById, updateSubject } from '../actions/subjectActions';\nimport { closeUpdateSubjectModal, closeShowSubjectsModal } from '../actions/navigationActions';\n\n\nimport { Jumbotron, Form, Col, Button, Row, Container, Card } from 'react-bootstrap';\n\nlet styles = {\n   container: {\n      marginTop: '40px'\n   },\n   updateCard: {\n      width: '400px',\n      padding: '20px',\n      boxShadow: '1px 3px 1px #9E9E9E'\n   }\n}\n\nclass UpdateSubjectComponent extends Component {\n   state = {\n      newSubjectData: {\n         id: this.props.match.params.id,\n         subjectName: ''\n      }\n   }\n\n   componentDidMount() {\n      this.props.getSubjectById(this.state.newSubjectData.id);\n     \n   }\n\n   onChangeSubjectName = (evt) => {\n      let { newSubjectData } = this.state;\n      newSubjectData.subjectName = evt.target.value;\n      this.setState({ newSubjectData })\n   }\n\n   handleUpdateSubject = (evt) => {\n      evt.preventDefault();\n      console.log(\"TRYING TO UPDATE THE SUBJECT\");\n      this.props.updateSubject(this.state.newSubjectData, this.state.newSubjectData.id);\n   }\n\n   render() {\n      return (\n         <>\n            <Jumbotron>\n               <Container>\n                  <Row>\n                  <Col xs={3}></Col>\n                     <Col xs={6}>\n                        <Card className=\"col-12\" style={styles.updateCard}>\n                           <Card.Body>\n                              <Card.Title>Update subject</Card.Title>\n                              <Card.Text>\n                                 <Form.Group controlId=\"subjectName\">\n                                    <Form.Label>Subject</Form.Label>\n                                    <Form.Control\n                                       type=\"text\"\n                                       //value={this.props.subject.subjectName}\n                                       onChange={this.onChangeSubjectName} \n                                    />\n                                 </Form.Group>\n                                 <Form.Group controlId=\"tokens\">\n                                    <Button\n                                       variant=\"primary\"\n                                       onClick={this.handleUpdateSubject}\n                                       > Update\n                                    </Button>\n                                 </Form.Group>\n                              </Card.Text>\n                           </Card.Body>\n                        </Card>\n                     </Col>\n                     <Col xs={3}></Col>\n                  </Row>\n               </Container>\n            </Jumbotron>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      subjects: state.subject.items,\n      subject: state.subject.item,\n      navigation: state.navigation\n   }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllSubjects: bindActionCreators(getAllSubjects, dispatch),\n      addSubject: bindActionCreators(addSubject, dispatch),\n      getSubjectById: bindActionCreators(getSubjectById,dispatch),\n      closeUpdateSubjectModal: bindActionCreators(closeUpdateSubjectModal, dispatch),\n      updateSubject: bindActionCreators(updateSubject, dispatch),\n      \n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateSubjectComponent)","/home/thando/Projects/React/school-front-end/src/components/LearnerLessons.js",[],"/home/thando/Projects/React/school-front-end/src/components/LearnerNavigation.js",["230","231","232","233","234","235","236","237","238","239"],"/home/thando/Projects/React/school-front-end/src/components/SelectSubject.js",["240"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getAllLearners, removeLearner } from '../actions/learnerActions';\n\nimport LearnerNavigation from './LearnerNavigation';\n\nimport { Card, Button, Table, Row, Container, Col, Jumbotron } from 'react-bootstrap';\n\n\n\nlet styles = {\n   // container: {\n   //    marginTop: '40px'\n   // },\n   learnersListCard: {\n      // width: '400px',\n      padding: '10px',\n      boxShadow: '1px 3px 1px #9E9E9E'\n   }\n}\n\nclass SelectSubject extends Component {\n\n   state = {\n      isLoading: true\n   }\n\n   componentDidMount() {\n      this.props.getAllLearners();\n   }\n\n   deleteLearner = (id) => {\n      this.props.removeLearner(this.props.learners, id);\n   }\n\n   render() {\n      // const { closeLearnerModal, showLearnerModal } = this.props;\n\n      const learners = this.props.learners.map(learner => {\n         return (\n            <tr key={learner.id}>\n               <td>{learner.firstName}</td>\n               <td>{learner.lastName}</td>\n               <td>{learner.email}</td>\n               <td>{learner.tokens}</td>\n               <td>{learner.tokens}</td>\n               <td>{learner.grade.gradeName}</td>\n               <td>\n                  <Button variant=\"primary\" className=\"mr-2\">Attend</Button>\n               </td>\n            </tr>\n         );\n      });\n\n      // if (this.state.isLoading) {\n      //    return(<div>Loading....</div>)\n      // }\n\n      //  { !this.props.learners ? (\n      //       <div>Loading....</div>\n      //    ) : (\n      //      <div>Loaded...</div>\n      //    ) \n      // }\n\n      return (\n         <>\n            <Jumbotron>\n\n               <Row>\n                  <Col xs={2}></Col>\n                  <Col xs={8}>\n                     <Container>\n                        <LearnerNavigation />\n                        <Card className=\"mt-5 col-12\" style={styles.learnersListCard}>\n                           <Card.Body>\n                              <Card.Title>Select Subject</Card.Title>\n                              <Card.Text>\n                                 <Table striped bordered hover>\n                                    <thead>\n                                       <tr>\n                                          <th>Lesson</th>\n                                          <th>Subject</th>\n                                          <th>Teacher</th>\n                                          <th>Time</th>\n                                          <th>Day</th>\n                                          <th>Grade</th>\n                                          <th>Action</th>\n                                       </tr>\n                                    </thead>\n                                    <tbody>\n                                       {learners}\n                                    </tbody>\n                                 </Table>\n                              </Card.Text>\n                           </Card.Body>\n                        </Card>\n                     </Container>\n                  </Col>\n                  <Col xs={2}></Col>\n               </Row>\n            </Jumbotron>\n         </>\n      );\n   }\n}\n\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      learners: state.learner.items\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllLearners: bindActionCreators(getAllLearners, dispatch),\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSubject);\n","/home/thando/Projects/React/school-front-end/src/components/ChooseSubjectModal.js",["241","242","243","244"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getAllSubjects } from '../actions/subjectActions';\nimport { selectSubject, getLearnerById } from '../actions/learnerActions';\nimport { closeShowSelectSubjectModal } from '../actions/navigationActions';\n\nimport { Button, Modal, Col, Form } from 'react-bootstrap';\nimport { useParams } from 'react-router';\n\nlet styles = {\n   selectSubjectCard: {\n      // width: '400px',\n      padding: '10px',\n      boxShadow: '1px 3px 1px #9E9E9E'\n   }\n}\n\nclass ChooseSubjectModal extends Component {\n   state = {\n      selectedList: [],\n      checkedList: [],\n      isChecked: false,\n   }\n\n   componentDidMount() {\n      let location = window.location;\n      let vars = location.pathname.split(\"/\");\n      let learnerId = vars[2];\n\n      this.props.getAllSubjects();\n      this.props.getLearnerById(learnerId);\n     \n   }\n\n   onChangeSubjectName = (evt, id) => { \n      let resultArray = []\n\n      if(evt.target.checked) {\n         resultArray = this.state.checkedList.filter(checkedId => checkedId !== id);\n         resultArray.push(id);\n\n      } else { // If not checked (false), then remove this id from checkedLis\n         resultArray = this.state.checkedList.filter(checkedId => checkedId !== id);\n      }\n\n      this.setState({\n         checkedList: resultArray\n      });\n      //console.log(\"id: this.props.match.params.id\", this.props.match.params.id);\n   }\n\n\n   chooseSubject = (evt) => {\n      evt.preventDefault();\n\n      // LOOP THROUGH LIST OF SUBJECT IDs \n      for (let i = 0; i < this.state.checkedList.length; i++) {\n         // GET LEARNER BY ID FROM PARAMS\n         console.log(\"this.state.checkedList[i]: \", this.state.checkedList[i]);\n         this.props.selectSubject(this.state.checkedList[i], this.props.learner);\n      }\n\n   }\n\n   render() {\n      const subjectList = this.props.subjects.map(subject => {\n         return (\n            <div class=\"form-check mt-2\" key={subject.id} data-idx={subject.id}>\n               <input \n                  id={subject.id}\n                  value={subject.subjectName} \n                  name={subject.subjectName} \n                  class=\"form-check-input\" \n                  type=\"checkbox\" \n                  onChange={ (evt) => this.onChangeSubjectName(evt, subject.id) } />\n               <label class=\"form-check-label\" for=\"defaultCheck1\">{subject.subjectName}</label>\n            </div>\n         );\n      });\n\n      return (\n         <>\n            <Modal\n               show={this.props.navigation.isShowSelectSubjectModalOpen}\n               onHide={() => this.props.closeShowSelectSubjectModal()}\n               // backdrop=\"static\"\n               keyboard={false}\n            >\n               <Modal.Header closeButton>\n                  <Modal.Title>Select Subject</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <form action=\"/learner/{{learner.id}}/day/{{dayId}}/lessons\" method=\"post\">\n                     <div class=\"modal-body\">\n                        <div class=\"card rounded\" style={styles.selectSubjectCard}>\n\n                           {subjectList}\n\n                        </div>\n                     </div>\n                     <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        <button type=\"submit\" class=\"btn btn-primary\" onClick={ this.chooseSubject}>Save Subjects</button>\n                     </div>\n                  </form>\n               </Modal.Body>\n\n            </Modal>\n         </>\n      );\n   }\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      grades: state.grade.items,\n      learners: state.learner.items,\n      navigation: state.navigation,\n      subjects: state.subject.items,\n      learner: state.learner.item\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      closeShowSelectSubjectModal: bindActionCreators(closeShowSelectSubjectModal, dispatch),\n      getAllSubjects: bindActionCreators(getAllSubjects, dispatch),\n      selectSubject: bindActionCreators(selectSubject, dispatch),\n      getLearnerById: bindActionCreators(getLearnerById, dispatch),\n\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSubjectModal);\n","/home/thando/Projects/React/school-front-end/src/components/LearnerSubjectsModal.js",["245","246"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getLearnerById, removeLearnerSubject } from '../actions/learnerActions';\nimport { closeLearnerSubjectsModal } from '../actions/navigationActions';\n\nimport { Button, Modal, Col, Table } from 'react-bootstrap';\n\nlet styles = {\n   selectSubjectCard: {\n      // width: '400px',\n      padding: '10px',\n      boxShadow: '1px 3px 1px #9E9E9E'\n   }\n}\n\nclass LearnerSubjects extends Component {\n   state = {\n      \n      selectedList: [],\n      checkedList: [],\n      isChecked: false,\n   }\n\n   componentDidMount() {\n      let location = window.location;\n      let vars = location.pathname.split(\"/\");\n      let learnerId = vars[2];\n\n      this.props.getLearnerById(learnerId);\n      //this.props.getAllSubjects();\n\n   }\n\n   deleteSubject = (subjectId) => {\n      console.log(\"this.props.learner deleteSubject:\", this.props.learner.subjects);\n      this.props.removeLearnerSubject(subjectId, this.props.learner)\n   }\n\n   render() {\n      let mySubjects = [];\n\n      if( this.props.learner ) {\n\n         mySubjects = this.props.learner.subjects.map( subject => {\n            return (\n               <tr key={subject.id}>\n                  <td>{subject.subjectName}</td>\n                  <td>\n                     <Button \n                        variant=\"danger\"\n                        onClick={ () => this.deleteSubject(subject.id)}\n                        > Remove\n                     </Button>\n                  </td>\n               </tr>\n            );\n         });\n      }\n\n      return (\n         <>\n            <Modal\n               show={ this.props.navigation.isLearnerSubjectsModalOpen }\n               onHide={ () => this.props.closeLearnerSubjectsModal() }\n               // backdrop=\"static\"\n               keyboard={false}\n            >\n               <Modal.Header closeButton>\n                  <Modal.Title>My subjects</Modal.Title>\n               </Modal.Header>\n               <Modal.Body>\n                  <Table striped bordered hover>\n                     <thead>\n                        <tr>\n                           <th>Subject name</th>\n                           <th>Action</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        { mySubjects }\n                     </tbody>\n                    \n                  </Table>\n                  <button \n                     type=\"button\" \n                     className=\"btn btn-secondary mt-3 \" \n                     data-dismiss=\"modal\"\n                     onClick={ () => this.props.closeLearnerSubjectsModal() }>Close\n                  </button>\n               </Modal.Body>\n\n            </Modal>\n         </>\n      );\n   }\n}\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      learners: state.learner.items,\n      navigation: state.navigation,\n      learner: state.learner.item\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      closeLearnerSubjectsModal: bindActionCreators(closeLearnerSubjectsModal, dispatch),\n      getLearnerById: bindActionCreators(getLearnerById, dispatch),\n      removeLearnerSubject: bindActionCreators(removeLearnerSubject, dispatch),\n\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnerSubjects);\n","/home/thando/Projects/React/school-front-end/src/components/LearnerClassmates.js",["247","248","249"],"/home/thando/Projects/React/school-front-end/src/components/TeacherLessons.js",["250"],"\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { getAllLearners, getLearnerById } from '../actions/learnerActions';\n\nimport LearnerNavigation from './LearnerNavigation';\n\nimport { Card, Button, Table, Row, Container, Col, Jumbotron, Nav, Form } from 'react-bootstrap';\n\n\nlet styles = {\n   // container: {\n   //    marginTop: '40px'\n   // },\n   learnersListCard: {\n      // width: '400px',\n      padding: '10px',\n      boxShadow: '1px 3px 1px #9E9E9E'\n   }\n}\n\nclass LearnerLessons extends Component {\n\n   state = {\n      isLoading: true\n   }\n\n   componentDidMount() {\n      let location = window.location;\n      let vars = location.pathname.split(\"/\");\n      let learnerId = vars[2];\n\n      this.props.getLearnerById(learnerId);\n      this.props.getAllLearners();\n   }\n\n   deleteLearner = (id) => {\n      this.props.removeLearner(this.props.learners, id);\n   }\n\n   render() {\n\n      let firstName = \"\";\n      let learnerLessons = [];\n\n      if (this.props.learner) {\n\n         firstName = this.props.learner.firstName;\n\n         learnerLessons = this.props.learner.lessons.map(lesson => {\n            console.log(\"TRYING TRYING: \", lesson.grade.gradeName);\n            return (\n               <tr key={lesson.id}>\n                  <td>{lesson.lessonName}</td>\n                  <td>{lesson.subject.subjectName}</td>\n                  {/* <td>{lesson.email}</td> */}\n                  <td>{lesson.time}</td>\n                  <td>{lesson.day.dayName}</td>\n                  <td>{lesson.grade.gradeName}</td>\n                  <td>\n                     <Button variant=\"primary\" className=\"mr-2\">Attend</Button>\n                  </td>\n               </tr>\n            );\n         });\n\n         console.log(\"learnerLessons: \", learnerLessons);\n\n      }\n\n\n\n      // if (this.state.isLoading) {\n      //    return(<div>Loading....</div>)\n      // }\n\n      //  { !this.props.learners ? (\n      //       <div>Loading....</div>\n      //    ) : (\n      //      <div>Loaded...</div>\n      //    ) \n      // }\n\n      return (\n         <>\n            <Jumbotron>\n\n               <Row>\n                  <Col xs={2}></Col>\n                  <Col xs={8}>\n                     <Container>\n                        <Row>\n                           <Col xs=\"auto\">\n                              <Nav variant=\"pills\" defaultActiveKey=\"#first\" className=\"mt-4\">\n                                 <Nav.Item onClick={() => this.props.openShowSelectSubjectModal()}>\n                                    <Nav.Link href=\"#first\">Choose Subject</Nav.Link>\n                                 </Nav.Item>\n                              </Nav>\n                           </Col>\n                           <Col xs=\"auto\">\n                              <Nav variant=\"pills\" defaultActiveKey=\"#first\" className=\"mt-4\">\n                                 <Nav.Item onClick={() => this.props.openLearnerSubjectsModal()}>\n                                    <Nav.Link href=\"#first\">My subjects</Nav.Link>\n                                 </Nav.Item>\n                              </Nav>\n                           </Col>\n\n\n                           <Col md={1} >\n\n                           </Col>\n\n\n                        </Row>\n                        <Card className=\"mt-5 col-12\" style={styles.learnersListCard}>\n                           <Card.Body>\n                              <Row>\n                                 <Col xs={12} md={3}>\n                                    <Form.Group controlId=\"gradeSelect\">\n                                       <Form.Control\n                                          as=\"select\"\n                                          custom\n                                          onChange={this.onChangeGrade}\n                                       >\n                                          <option>Filter By Day</option>\n                                          {/* {gradeOptions} */}\n                                       </Form.Control>\n                                    </Form.Group>\n                                 </Col>\n                                 <Col xs={12} md={3}>\n                                    <Form.Group controlId=\"gradeSelect\">\n                                       <Form.Control\n                                          as=\"select\"\n                                          custom\n                                          onChange={this.onChangeGrade}\n                                       >\n                                          <option>Sort By:</option>\n                                          {/* {gradeOptions} */}\n                                       </Form.Control>\n                                    </Form.Group>\n                                 </Col>\n\n                              </Row>\n                              <Card.Title>Teacher Lessons</Card.Title>\n                              <Card.Title>Welcome back: {firstName}</Card.Title>\n                              <Card.Title>Monday: Lessons</Card.Title>\n                              <Card.Text>\n                                 <Table striped bordered hover>\n                                    <thead>\n                                       <tr>\n                                          <th>Lesson</th>\n                                          <th>Subject</th>\n                                          {/* <th>Teacher</th> */}\n                                          <th>Time</th>\n                                          <th>Day</th>\n                                          <th>Grade</th>\n                                          <th>Action</th>\n                                       </tr>\n                                    </thead>\n                                    <tbody>\n                                       {learnerLessons}\n                                    </tbody>\n                                 </Table>\n                              </Card.Text>\n                           </Card.Body>\n                        </Card>\n                     </Container>\n                  </Col>\n                  <Col xs={2}></Col>\n               </Row>\n            </Jumbotron>\n         </>\n      );\n   }\n}\n\n\n// Which properties I need in which component\nconst mapStateToProps = (state) => {\n   return {\n      learners: state.learner.items,\n      learner: state.learner.item\n\n   }\n}\n\n// and which Actions I want to dispatch there \nconst mapDispatchToProps = (dispatch) => {\n   return {\n      getAllLearners: bindActionCreators(getAllLearners, dispatch),\n      getLearnerById: bindActionCreators(getLearnerById, dispatch),\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnerLessons);\n",{"ruleId":"251","severity":1,"message":"252","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":12},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"255","replacedBy":"259"},{"ruleId":"257","replacedBy":"260"},{"ruleId":"251","severity":1,"message":"261","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":18},{"ruleId":"251","severity":1,"message":"262","line":3,"column":27,"nodeType":"253","messageId":"254","endLine":3,"endColumn":33},{"ruleId":"251","severity":1,"message":"263","line":3,"column":35,"nodeType":"253","messageId":"254","endLine":3,"endColumn":40},{"ruleId":"251","severity":1,"message":"264","line":3,"column":42,"nodeType":"253","messageId":"254","endLine":3,"endColumn":48},{"ruleId":"251","severity":1,"message":"265","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":21},{"ruleId":"251","severity":1,"message":"266","line":61,"column":11,"nodeType":"253","messageId":"254","endLine":61,"endColumn":19},{"ruleId":"251","severity":1,"message":"267","line":4,"column":4,"nodeType":"253","messageId":"254","endLine":4,"endColumn":15},{"ruleId":"251","severity":1,"message":"268","line":14,"column":10,"nodeType":"253","messageId":"254","endLine":14,"endColumn":18},{"ruleId":"251","severity":1,"message":"266","line":53,"column":13,"nodeType":"253","messageId":"254","endLine":53,"endColumn":21},{"ruleId":"251","severity":1,"message":"269","line":83,"column":15,"nodeType":"253","messageId":"254","endLine":83,"endColumn":34},{"ruleId":"251","severity":1,"message":"270","line":83,"column":36,"nodeType":"253","messageId":"254","endLine":83,"endColumn":54},{"ruleId":"251","severity":1,"message":"271","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":20},{"ruleId":"251","severity":1,"message":"272","line":38,"column":15,"nodeType":"253","messageId":"254","endLine":38,"endColumn":32},{"ruleId":"251","severity":1,"message":"273","line":9,"column":5,"nodeType":"253","messageId":"254","endLine":9,"endColumn":11},{"ruleId":"251","severity":1,"message":"266","line":43,"column":13,"nodeType":"253","messageId":"254","endLine":43,"endColumn":21},{"ruleId":"251","severity":1,"message":"266","line":35,"column":13,"nodeType":"253","messageId":"254","endLine":35,"endColumn":21},{"ruleId":"255","replacedBy":"274"},{"ruleId":"257","replacedBy":"275"},{"ruleId":"251","severity":1,"message":"276","line":6,"column":35,"nodeType":"253","messageId":"254","endLine":6,"endColumn":57},{"ruleId":"251","severity":1,"message":"276","line":6,"column":35,"nodeType":"253","messageId":"254","endLine":6,"endColumn":57},{"ruleId":"251","severity":1,"message":"277","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":20},{"ruleId":"251","severity":1,"message":"278","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":21},{"ruleId":"251","severity":1,"message":"279","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":21},{"ruleId":"251","severity":1,"message":"280","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":21},{"ruleId":"251","severity":1,"message":"281","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":19},{"ruleId":"251","severity":1,"message":"282","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":18},{"ruleId":"251","severity":1,"message":"283","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":19},{"ruleId":"251","severity":1,"message":"284","line":17,"column":15,"nodeType":"253","messageId":"254","endLine":17,"endColumn":19},{"ruleId":"251","severity":1,"message":"285","line":26,"column":4,"nodeType":"253","messageId":"254","endLine":26,"endColumn":25},{"ruleId":"251","severity":1,"message":"286","line":43,"column":13,"nodeType":"253","messageId":"254","endLine":43,"endColumn":25},{"ruleId":"251","severity":1,"message":"287","line":5,"column":26,"nodeType":"253","messageId":"254","endLine":5,"endColumn":39},{"ruleId":"251","severity":1,"message":"288","line":9,"column":10,"nodeType":"253","messageId":"254","endLine":9,"endColumn":16},{"ruleId":"251","severity":1,"message":"289","line":9,"column":25,"nodeType":"253","messageId":"254","endLine":9,"endColumn":28},{"ruleId":"251","severity":1,"message":"284","line":9,"column":30,"nodeType":"253","messageId":"254","endLine":9,"endColumn":34},{"ruleId":"251","severity":1,"message":"290","line":10,"column":10,"nodeType":"253","messageId":"254","endLine":10,"endColumn":19},{"ruleId":"251","severity":1,"message":"289","line":8,"column":25,"nodeType":"253","messageId":"254","endLine":8,"endColumn":28},{"ruleId":"251","severity":1,"message":"273","line":10,"column":5,"nodeType":"253","messageId":"254","endLine":10,"endColumn":11},{"ruleId":"251","severity":1,"message":"268","line":9,"column":10,"nodeType":"253","messageId":"254","endLine":9,"endColumn":18},{"ruleId":"251","severity":1,"message":"273","line":11,"column":5,"nodeType":"253","messageId":"254","endLine":11,"endColumn":11},{"ruleId":"291","severity":1,"message":"292","line":38,"column":60,"nodeType":"293","messageId":"294","endLine":38,"endColumn":62},{"ruleId":"251","severity":1,"message":"295","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":25},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["296"],"no-negated-in-lhs",["297"],["296"],["297"],"'Navigation' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'NavigationBar' is defined but never used.","'response' is assigned a value but never used.","'ADD_SUBJECT' is defined but never used.","'subjects' is defined but never used.","'closeAddLessonModal' is assigned a value but never used.","'showAddLessonModal' is assigned a value but never used.","'withRouter' is defined but never used.","'showSubjectsModal' is assigned a value but never used.","'styles' is assigned a value but never used.",["296"],["297"],"'closeShowSubjectsModal' is defined but never used.","'AddNewLesson' is defined but never used.","'AddNewLearner' is defined but never used.","'AddNewSubject' is defined but never used.","'AddNewTeacher' is defined but never used.","'SubjectList' is defined but never used.","'LessonList' is defined but never used.","'TeacherList' is defined but never used.","'Form' is defined but never used.","'openShowTeachersModal' is defined but never used.","'gradeOptions' is assigned a value but never used.","'removeLearner' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'useParams' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'LearnerNavigation' is defined but never used.","no-global-assign","no-unsafe-negation"]